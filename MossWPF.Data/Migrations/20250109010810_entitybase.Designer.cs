// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MossWPF.Data;

#nullable disable

namespace MossWPF.Data.Migrations
{
    [DbContext(typeof(MossDbContext))]
    [Migration("20250109010810_entitybase")]
    partial class entitybase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.25");

            modelBuilder.Entity("MossWPF.Domain.Entities.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SubmissionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SubmissionId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("MossWPF.Domain.Entities.FileComparison", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ComparisonUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<int>("File1Id")
                        .HasColumnType("INTEGER");

                    b.Property<double>("File1MatchPct")
                        .HasColumnType("REAL");

                    b.Property<int>("File2Id")
                        .HasColumnType("INTEGER");

                    b.Property<double>("File2MatchPct")
                        .HasColumnType("REAL");

                    b.Property<double>("Similarity")
                        .HasColumnType("REAL");

                    b.Property<int>("SubmissionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("File1Id");

                    b.HasIndex("File2Id");

                    b.HasIndex("SubmissionId");

                    b.ToTable("FileComparisons");
                });

            modelBuilder.Entity("MossWPF.Domain.Entities.MatchRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ComparisonId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<int>("File1End")
                        .HasColumnType("INTEGER");

                    b.Property<int>("File1Start")
                        .HasColumnType("INTEGER");

                    b.Property<int>("File2End")
                        .HasColumnType("INTEGER");

                    b.Property<int>("File2Start")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ComparisonId");

                    b.ToTable("MatchRegions");
                });

            modelBuilder.Entity("MossWPF.Domain.Entities.Submission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubmissionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SubmissionUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Submissions");
                });

            modelBuilder.Entity("MossWPF.Domain.Entities.SubmissionSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BaseFiles")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateSubmitted")
                        .HasColumnType("TEXT");

                    b.Property<string>("ResultsLink")
                        .HasColumnType("TEXT");

                    b.Property<int>("ResultsToShow")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SelectedLanguage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Sensitivity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SourceFiles")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SubmissionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("UseDirectoryMode")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UseExperimental")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SubmissionId");

                    b.ToTable("SubmissionSettings");
                });

            modelBuilder.Entity("MossWPF.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MossWPF.Domain.Entities.File", b =>
                {
                    b.HasOne("MossWPF.Domain.Entities.Submission", "Submission")
                        .WithMany("Files")
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("MossWPF.Domain.Entities.FileComparison", b =>
                {
                    b.HasOne("MossWPF.Domain.Entities.File", "File1")
                        .WithMany("FileComparisonsFile1")
                        .HasForeignKey("File1Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MossWPF.Domain.Entities.File", "File2")
                        .WithMany("FileComparisonsFile2")
                        .HasForeignKey("File2Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MossWPF.Domain.Entities.Submission", "Submission")
                        .WithMany()
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File1");

                    b.Navigation("File2");

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("MossWPF.Domain.Entities.MatchRegion", b =>
                {
                    b.HasOne("MossWPF.Domain.Entities.FileComparison", "FileComparison")
                        .WithMany("MatchRegions")
                        .HasForeignKey("ComparisonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileComparison");
                });

            modelBuilder.Entity("MossWPF.Domain.Entities.Submission", b =>
                {
                    b.HasOne("MossWPF.Domain.Entities.User", "User")
                        .WithMany("Submissions")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MossWPF.Domain.Entities.SubmissionSettings", b =>
                {
                    b.HasOne("MossWPF.Domain.Entities.Submission", "Submission")
                        .WithMany()
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("MossWPF.Domain.Entities.File", b =>
                {
                    b.Navigation("FileComparisonsFile1");

                    b.Navigation("FileComparisonsFile2");
                });

            modelBuilder.Entity("MossWPF.Domain.Entities.FileComparison", b =>
                {
                    b.Navigation("MatchRegions");
                });

            modelBuilder.Entity("MossWPF.Domain.Entities.Submission", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("MossWPF.Domain.Entities.User", b =>
                {
                    b.Navigation("Submissions");
                });
#pragma warning restore 612, 618
        }
    }
}
